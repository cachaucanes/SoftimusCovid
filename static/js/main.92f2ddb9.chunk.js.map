{"version":3,"sources":["App.js","pages/Chargin.js","components/Casos.js","store/stores.js","reducer/reducer.js","pages/Footer.js","serviceWorker.js","index.js"],"names":["diaAyer","Chargin","chargin","size","color","loading","Casos","props","classes","makeStyles","root","minWidth","maxWidth","background","margin","bullet","display","transform","title","fontSize","pos","marginBottom","colorCard","useStyles","Zoom","in","style","transitionDelay","Card","className","variant","CardContent","Typography","component","casos","initial_state","isFetching","casosConfirmados","infoTotalcasos","totalCasosMuertos","totalRecuperados","casosDehoy","muertoshoy","recuperadosHoy","casosDeAyer","muertosAyer","recuperadosAyer","status","message","reducer","state","action","type","payload","Footer","Grid","container","direction","justify","alignItems","href","Context","React","createContext","date","Date","mes","getMonth","year","getFullYear","dia","getDate","fechaHoy","fechaAyer","App","useReducer","setState","useEffect","a","Axios","get","numeroCasosTotales","data","length","CasosTotalesMuertos","filter","caso","estado","numberCasosMuertos","CasosTotalesRecuperados","atenci_n","numberCasosRecuperados","casosAyer","fecha_reporte_web","numberCasosAyer","casov","fecha_de_notificaci_n","fecha_de_muerte","fecha_diagnostico","fis","casosMuertosAyer","numberMuertosAyer","fecha_recuperado","casosRecuperadosAyer","numberRecuperadosAyer","casosHoy","casosMuertosHoy","casosRecuperadosHoy","console","log","fetchCasos","Provider","value","textAlign","padding","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.92f2ddb9.chunk.js","sourcesContent":["import React, { useReducer, useEffect } from 'react';\n\nimport './App.css';\nimport Casos from './components/Casos';\nimport initial_state from './store/stores';\nimport { reducer } from './reducer/reducer';\nimport { Grid } from '@material-ui/core';\nimport Axios from 'axios';\nimport Footer from './pages/Footer';\n\nexport const Context = React.createContext()\nconst API = 'https://www.datos.gov.co/resource/gt2j-8ykr.json'\nlet date = new Date()\n\nlet mes = date.getMonth() + 1\nlet year = date.getFullYear()\nlet dia = date.getDate()\nif (mes < 10) mes = `0${mes}`\nif (dia < 10) dia = `0${dia}`\nlet diaAyer\nif (dia < 10) {\n  diaAyer = `0${dia - 1}`\n} else {\n  diaAyer = dia - 1\n}\nlet fechaHoy = `${year}-${mes}-${dia}T00:00:00.000`\n\nlet fechaAyer = `${year}-${mes}-${diaAyer}T00:00:00.000`\n\n\nfunction App() {\n\n  const [state, setState] = useReducer(reducer, initial_state)\n\n  useEffect(() => {\n\n    const fetchCasos = async () => {\n      try {\n        /* Todos los casos confirmados*/\n        const casos = await Axios.get(`${API}?$limit=50000000`)\n        const numeroCasosTotales = casos.data.length\n        setState({\n          type: 'CASOS_CONFIRMADOS',\n          payload: {\n            casosConfirmados: numeroCasosTotales,\n            infoTotalcasos: casos.data\n          }\n        })\n\n        /* Todos los casos Muertos*/\n        const CasosTotalesMuertos = casos.data.filter(caso => (caso.estado === 'Fallecido'))\n        const numberCasosMuertos = CasosTotalesMuertos.length\n        setState({\n          type: 'CASOS_MUERTOS',\n          payload: {\n            totalCasosMuertos: numberCasosMuertos\n          }\n        })\n        /* Todos los casos recuperados*/\n        const CasosTotalesRecuperados = casos.data.filter(caso => (caso.atenci_n === 'Recuperado'))\n        const numberCasosRecuperados = CasosTotalesRecuperados.length\n        setState({\n          type: 'RECUPERADOS',\n          payload: {\n            totalRecuperados: numberCasosRecuperados\n          }\n        })\n\n\n        /* Casos de ayer */\n        const casosAyer = casos.data.filter(caso => (caso.fecha_reporte_web === fechaAyer))\n        const numberCasosAyer = casosAyer.length\n        setState({\n          type: 'CASOS_AYER',\n          payload: {\n            casosDeAyer: numberCasosAyer\n          }\n        })\n\n        /* Muertes de ayer */\n        const casosMuertosAyer = await casos.data.filter(casov => {\n          if (casov.estado === 'Fallecido' || casov.atenci_n === 'Fallecido') {\n            if (casov.fecha_de_notificaci_n === fechaAyer ||\n              casov.fecha_de_muerte === fechaAyer ||\n              casov.fecha_diagnostico === fechaAyer ||\n              casov.fecha_reporte_web === fechaAyer ||\n              casov.fis === fechaAyer) {\n              return true\n            }\n          }\n          return false\n        })\n        const numberMuertosAyer = casosMuertosAyer.length\n        setState({\n          type: 'MUERTOS_AYER',\n          payload: {\n            muertosAyer: numberMuertosAyer\n          }\n        })\n\n        /* Recuperados ayer */\n        const casosRecuperadosAyer = await casos.data.filter(casov => {\n          if (casov.atenci_n === 'Recuperado') {\n            if (casov.fecha_de_notificaci_n === fechaAyer ||\n              casov.fecha_diagnostico === fechaAyer ||\n              casov.fecha_recuperado === fechaAyer ||\n              casov.fis === fechaAyer ||\n              casov.fecha_reporte_web === fechaAyer) {\n              return true\n            }\n          }\n          return false\n        })\n        const numberRecuperadosAyer = casosRecuperadosAyer.length\n        setState({\n          type: 'RECUPERADOS_AYER',\n          payload: {\n            recuperadosAyer: numberRecuperadosAyer\n          }\n        })\n\n        /* Casos de hoy */\n        const casosHoy = casos.data.filter(caso => (caso.fecha_reporte_web === fechaHoy))\n        setState({\n          type: 'CASOS_HOY',\n          payload: {\n            casosDehoy: casosHoy.length > 0 ? casosHoy.length : (<p style={{ fontSize: '18px' }}>No hay datos</p>)\n          }\n        })\n        /* Casos muertos hoy */\n        const casosMuertosHoy = await casos.data.filter(casov => {\n          if (casov.estado === 'Fallecido' || casov.atenci_n === 'Fallecido') {\n            if (casov.fecha_de_notificaci_n === fechaHoy ||\n              casov.fecha_de_muerte === fechaHoy ||\n              casov.fecha_diagnostico === fechaHoy ||\n              casov.fecha_reporte_web === fechaHoy ||\n              casov.fis === fechaHoy) {\n              return true\n            }\n          }\n          return false\n        })\n        setState({\n          type: 'MUERTOS_HOY',\n          payload: {\n            muertoshoy: casosMuertosHoy.length > 0 ? casosMuertosHoy.length : (<p style={{ fontSize: '18px' }}>No hay datos</p>)\n          }\n        })\n\n        /* Recuperados hoy */\n        const casosRecuperadosHoy = await casos.data.filter(casov => {\n          if (casov.atenci_n === 'Recuperado') {\n            if (casov.fecha_de_notificaci_n === fechaHoy ||\n              casov.fecha_diagnostico === fechaHoy ||\n              casov.fecha_recuperado === fechaHoy ||\n              casov.fis === fechaHoy ||\n              casov.fecha_reporte_web === fechaHoy) {\n              return true\n            }\n          }\n          return false\n        })        \n        setState({\n          type: 'RECUPERADOS_HOY',\n          payload: {\n            recuperadosHoy: casosRecuperadosHoy.length > 0 ? casosRecuperadosHoy.length : (<p style={{ fontSize: '18px' }}>No hay datos</p>)\n          }\n        })\n\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    }\n    fetchCasos()\n\n  }, [])\n  return (\n    <Context.Provider value={{ state, setState }}>\n      <div className=\"App\">\n        <div className=\"Header\" style={{ textAlign: 'center', padding: '3rem', color: 'white' }}>\n          <h1 style={{ margin: 0 }}>Datos Covid-19 Colombia</h1>\n        </div>\n        <div>\n          <div>\n            <h1>Casos totales</h1>\n          </div>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-around\"\n            alignItems=\"flex-start\"\n          >\n            <Casos background='#ff980099' title={'Casos confirmados'} casos={state.casosConfirmados} />\n            <Casos background='#ff00008f' title={'Muertes totales'} casos={state.totalCasosMuertos} />\n            <Casos background='#00800099' title={'Total recuperados'} casos={state.totalRecuperados} />\n\n          </Grid>\n        </div>\n        <div>\n          <div>\n            <h1>Casos de hoy</h1>\n          </div>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-around\"\n            alignItems=\"flex-start\"\n          >\n            <Casos background='#ff9800b8' title={'Casos de hoy'} casos={state.casosDehoy} />\n            <Casos background='#ff0000b8' title={'Muertes hoy'} casos={state.muertoshoy} />\n            <Casos background='#008000c7' title={'Recuperados hoy'} casos={state.recuperadosHoy} />\n          </Grid>\n\n\n\n        </div>\n        <div>\n          <div>\n            <h1>Casos de Ayer</h1>\n          </div>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-around\"\n            alignItems=\"flex-start\"\n          >\n            <Casos background='#ff9800b8' title={'Casos Ayer'} casos={state.casosDeAyer} />\n            <Casos background='#ff0000b8' title={'Muertes Ayer'} casos={state.muertosAyer} />\n            <Casos background='#008000c7' title={'Recuperados Ayer'} casos={state.recuperadosAyer} />\n          </Grid>\n\n\n\n        </div>\n        <Footer/>\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react'\r\nimport { ClipLoader } from 'react-spinners'\r\n\r\n\r\n\r\nconst Chargin = ({chargin}) => {\r\n      \r\n  return(\r\n    <ClipLoader\r\n        size={50}\r\n        //size={\"150px\"} this also works\r\n        color={\"#123abc\"}\r\n        loading={chargin}\r\n      />\r\n  )\r\n}\r\n\r\nexport default Chargin","import React from 'react'\r\n\r\nimport { Card, CardContent, Typography, makeStyles, Zoom } from '@material-ui/core';\r\nimport Chargin from '../pages/Chargin';\r\n\r\nconst Casos = (props) => {  \r\n  const useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 275,\r\n      maxWidth: 300,\r\n      background: props.background,\r\n      margin: 5\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    colorCard: {\r\n      color: 'whitesmoke'\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n    <Zoom in={true} style={{ transitionDelay: '500ms' }}>\r\n      <Card className={classes.root} variant=\"outlined\">\r\n        <CardContent>\r\n          <Typography className={classes.colorCard} variant=\"h5\" component=\"h5\">\r\n            {props.title}            \r\n        </Typography>\r\n          <Typography className={classes.colorCard} variant=\"h3\" component=\"h3\">\r\n            \r\n            {props.casos ? props.casos : (<Chargin chargin={true}/>)}            \r\n            \r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n      </Zoom>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Casos","\r\n\r\nconst initial_state = {\r\n  isFetching: false,\r\n  casosConfirmados: '',\r\n  infoTotalcasos: [],\r\n  totalCasosMuertos: '',\r\n  totalRecuperados: '',  \r\n  casosDehoy: '',\r\n  muertoshoy: '',\r\n  recuperadosHoy: '',\r\n  casosDeAyer: '',\r\n  muertosAyer: '',\r\n  recuperadosAyer: '',\r\n  status: '',\r\n  message: ''\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default initial_state","export const reducer = (state, action) => {\r\n  switch (action.type) {\r\n\r\n    case 'CASOS_CONFIRMADOS':\r\n      return{\r\n        ...state,\r\n        casosConfirmados: action.payload.casosConfirmados,\r\n        infoTotalcasos: action.payload.infoTotalcasos\r\n      }\r\n    case 'CASOS_MUERTOS':\r\n      return {\r\n        ...state,\r\n        totalCasosMuertos: action.payload.totalCasosMuertos\r\n      }\r\n    case 'RECUPERADOS':\r\n      return {\r\n        ...state,\r\n        totalRecuperados: action.payload.totalRecuperados\r\n      }\r\n    \r\n    case 'CASOS_AYER':\r\n      return {\r\n        ...state,\r\n        casosDeAyer: action.payload.casosDeAyer\r\n      }          \r\n    case 'MUERTOS_AYER': {\r\n      return {\r\n        ...state,\r\n        muertosAyer: action.payload.muertosAyer\r\n      }\r\n    }\r\n    case 'RECUPERADOS_AYER': {\r\n      return {\r\n        ...state,\r\n        recuperadosAyer: action.payload.recuperadosAyer\r\n      }\r\n    }\r\n    case 'CASOS_HOY':\r\n      return {\r\n        ...state,\r\n        casosDehoy: action.payload.casosDehoy\r\n      }\r\n    case 'MUERTOS_HOY':\r\n        return {\r\n          ...state,\r\n          muertoshoy: action.payload.muertoshoy\r\n        }\r\n    case 'RECUPERADOS_HOY':\r\n      return {\r\n        ...state,\r\n        recuperadosHoy: action.payload.recuperadosHoy\r\n      }\r\n  \r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react'\r\nimport '../App.css'\r\nimport { Grid } from '@material-ui/core'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"Footer\">\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <div>\r\n          <p className=\"FooterTitle\">\r\n            Toda la informacion aquí mostrada proviene de los \r\n            datos abiertos del Coronavirus COVID-19 en Colombia\r\n        <a href=\"https://www.datos.gov.co/Salud-y-Protecci-n-Social/Casos-positivos-de-COVID-19-en-Colombia/gt2j-8ykr\">https://www.datos.gov.co</a>\r\n\r\n          </p>\r\n        </div>\r\n        <div>\r\n          Api: <a href=\"https://www.datos.gov.co/resource/gt2j-8ykr.json\">https://www.datos.gov.co/resource/gt2j-8ykr.json</a>\r\n        </div>\r\n        <div>Developer by: <a href=\"https://github.com/cachaucanes\">@Softimus</a></div>\r\n      </Grid>\r\n      \r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}